package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WeatherDataAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWeatherDataAllPropertiesEquals(WeatherData expected, WeatherData actual) {
        assertWeatherDataAutoGeneratedPropertiesEquals(expected, actual);
        assertWeatherDataAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWeatherDataAllUpdatablePropertiesEquals(WeatherData expected, WeatherData actual) {
        assertWeatherDataUpdatableFieldsEquals(expected, actual);
        assertWeatherDataUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWeatherDataAutoGeneratedPropertiesEquals(WeatherData expected, WeatherData actual) {
        assertThat(expected)
            .as("Verify WeatherData auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWeatherDataUpdatableFieldsEquals(WeatherData expected, WeatherData actual) {
        assertThat(expected)
            .as("Verify WeatherData relevant properties")
            .satisfies(e -> assertThat(e.getCondition()).as("check condition").isEqualTo(actual.getCondition()))
            .satisfies(e -> assertThat(e.getTemperature()).as("check temperature").isEqualTo(actual.getTemperature()))
            .satisfies(e -> assertThat(e.getDateStamp()).as("check dateStamp").isEqualTo(actual.getDateStamp()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWeatherDataUpdatableRelationshipsEquals(WeatherData expected, WeatherData actual) {}
}
